package com.crawljax.web.jatyta.model.entities;

import java.io.Serializable;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Transient;

import org.codehaus.jackson.annotate.JsonIgnoreProperties;

import com.crawljax.plugins.crawloverview.CrawlOverview;
import com.crawljax.web.jatyta.knowledgebase.db.util.JatytaAnnotation;

/**
 * The entity that represents the broken links.
 * 
 * @author mgimenez
 * 
 */
@JatytaAnnotation(keyName = "id")
@JsonIgnoreProperties(ignoreUnknown = true)
@Entity
public class JatytaBrokenState implements Serializable, EntityInterface<Long> {

	private static final long serialVersionUID = 1L;
	/**
	 * The id
	 */
	private Long id;
	/**
	 * The id of the Broken Crawljax State.
	 */
	private Integer stateBroken;
	/**
	 * The url of the broken state.
	 */
	private String urlBroken;
	/**
	 * The Xpath of the element that redirect the broken state.
	 */
	private String xpath;
	/**
	 * The id of the Caller Crawljax state.
	 */
	private Integer stateCaller;
	/**
	 * The crawljax id record.
	 */
	private int idCrawlRecord;

	/**
	 * The style value to render the broken link
	 */
	private String styleValue;
	/**
	 * The image of the element that redirect to the broken state.
	 */
	private byte[] image;

	/**
	 * @return the id
	 */
	@Id
	@GeneratedValue(strategy = GenerationType.AUTO)
	@Column(name = "id")
	public Long getId() {
		return id;
	}

	/**
	 * @param id
	 *            the id to set
	 */
	public void setId(Long id) {
		this.id = id;
	}

	/**
	 * @return the stateBroken
	 */
	@Column(name = "stateBroken", nullable = false)
	public Integer getStateBroken() {
		return stateBroken;
	}

	/**
	 * @param stateBroken
	 *            the stateBroken to set
	 */
	public void setStateBroken(Integer stateBroken) {
		this.stateBroken = stateBroken;
	}

	/**
	 * @return the urlBroken
	 */
	@Column(name = "urlBroken", nullable = false)
	public String getUrlBroken() {
		return urlBroken;
	}

	/**
	 * @param urlBroken
	 *            the urlBroken to set
	 */
	public void setUrlBroken(String urlBroken) {
		this.urlBroken = urlBroken;
	}

	/**
	 * @return the xpath
	 */
	@Column(name = "xpath", nullable = false)
	public String getXpath() {
		return xpath;
	}

	/**
	 * @param xpath
	 *            the xpath to set
	 */
	public void setXpath(String xpath) {
		this.xpath = xpath;
	}

	/**
	 * @return the stateCaller
	 */
	@Column(name = "stateCaller", nullable = false)
	public Integer getStateCaller() {
		return stateCaller;
	}

	/**
	 * @param stateCaller
	 *            the stateCaller to set
	 */
	public void setStateCaller(Integer stateCaller) {
		this.stateCaller = stateCaller;
	}

	/**
	 * @return the idCrawlRecord
	 */
	@Column(name = "idCrawlRecord", nullable = false)
	public int getIdCrawlRecord() {
		return idCrawlRecord;
	}

	/**
	 * @param idCrawlRecord
	 *            the idCrawlRecord to set
	 */
	public void setIdCrawlRecord(int idCrawlRecord) {
		this.idCrawlRecord = idCrawlRecord;
	}

	/**
	 * @return the styleValue
	 */
	@Column(name = "styleValue", nullable = true)
	public String getStyleValue() {
		return styleValue;
	}

	/**
	 * @param styleValue
	 *            the styleValue to set
	 */
	public void setStyleValue(String styleValue) {
		this.styleValue = styleValue;
	}
	
	/**
	 * Return the image of the broken state link.
	 * @return the image
	 */
	@Column(name = "image", nullable = true)
	public byte[] getImage() {
		return image;
	}

	/**
	 * Set in byte[] the image of the broken state link.
	 * @param image the image to set
	 */
	public void setImage(byte[] image) {
		this.image = image;
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see
	 * com.crawljax.web.yatyta.knowledgebase.db.model.dao.EntityInterface#getKeyName
	 * ()
	 */
	@Override
	@Transient
	public String getKeyName() {
		if (id != null) {
			return getId().toString();
		} else {
			return null;
		}
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see
	 * com.crawljax.web.yatyta.knowledgebase.db.model.dao.EntityInterface#setKeyName
	 * (java.lang.String)
	 */
	@Override
	public void setKeyName(String keyName) {
		if (keyName != null && id == null) {
			this.id = Long.decode(keyName);

		}

	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see java.lang.Object#toString()
	 */
	@Override
	@Transient
	public String toString() {
		return " id = " + getId() + ", stateBroken = " + getStateBroken()
				+ ", urlBroken = " + getUrlBroken() + ", xpath = " + getXpath()
				+ ", stateCaller = " + getStateCaller() + ", idCrawlRecord = "
				+ getIdCrawlRecord();
	}

	/**
	 * Return the URL of thumbnail from the state Caller generated by
	 * {@link CrawlOverview}.
	 * 
	 * @return The URL of the small image saved by {@link CrawlOverview}.
	 */
	@Transient
	public String getCallerThumbnailURL() {
		String result = "/output/crawl-records/" + idCrawlRecord
				+ "/plugins/0/screenshots/";
		if (stateCaller == 0) {
			result = result + "index_small.jpg";
		} else {
			result = result + "state" + stateCaller + "_small.jpg";
		}
		return result;
	}

	/**
	 * Return the URL of screenshot from the state Caller generated by
	 * {@link CrawlOverview}.
	 * 
	 * @return The URL of the image saved by {@link CrawlOverview}.
	 */
	@Transient
	public String getCallerScreenshotURL() {
		String result = "/output/crawl-records/" + idCrawlRecord
				+ "/plugins/0/screenshots/";
		if (stateCaller == 0) {
			result = result + "index.jpg";
		} else {
			result = result + "state" + stateCaller + ".jpg";
		}
		return result;
	}

	/**
	 * Return the URL of thumbnail from the broken state generated by
	 * {@link CrawlOverview}.
	 * 
	 * @return The URL of the small image saved by {@link CrawlOverview}.
	 */
	@Transient
	public String getBrokenThumbnailURL() {
		String result = "/output/crawl-records/" + idCrawlRecord
				+ "/plugins/0/screenshots/";
		if (stateBroken == 0) {
			result = result + "index_small.jpg";
		} else {
			result = result + "state" + stateBroken + "_small.jpg";
		}
		return result;
	}

	/**
	 * Return the URL of screenshot from the broken state generated by
	 * {@link CrawlOverview}.
	 * 
	 * @return The URL of the image saved by {@link CrawlOverview}.
	 */
	@Transient
	public String getBrokenScreenshotURL() {
		String result = "/output/crawl-records/" + idCrawlRecord
				+ "/plugins/0/screenshots/";
		if (stateBroken == 0) {
			result = result + "index.jpg";
		} else {
			result = result + "state" + stateBroken + ".jpg";
		}
		return result;
	}
}
