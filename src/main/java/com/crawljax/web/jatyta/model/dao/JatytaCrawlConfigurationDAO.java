/**
 * 
 */
package com.crawljax.web.jatyta.model.dao;

import org.hibernate.HibernateException;
import org.hibernate.Query;
import org.hibernate.Session;

import com.crawljax.web.jatyta.exception.JatytaException;
import com.crawljax.web.jatyta.model.entities.JatytaCrawlConfiguration;

/**
 * The DAO of {@link JatytaCrawlConfiguration}.
 * 
 * @author mgimenez
 * 
 */
public class JatytaCrawlConfigurationDAO extends
		DAOImpl<JatytaCrawlConfiguration, Long> {

	public JatytaCrawlConfigurationDAO(Session session) {
		super(session);

	}

	/**
	 * Get de {@link JatytaCrawlConfiguration} associated with the Crawljax
	 * Configuration id parameter.
	 * 
	 * @param configId
	 *            The Crawljax Configuration parameter.
	 * @return The {@link JatytaCrawlConfiguration}.
	 * @throws JatytaException
	 *             If a {@link HibernateException} occurs.
	 */
	public JatytaCrawlConfiguration getConfigurationByCrawljaxConfigId(
			String configId) throws JatytaException {
		try {
			session.beginTransaction();

			// delete prop value
			String hql = "from  JatytaCrawlConfiguration where configurationId =:configId";
			Query query = session.createQuery(hql);
			query.setString("configId", configId);
			JatytaCrawlConfiguration config = (JatytaCrawlConfiguration) query
					.uniqueResult();

			session.getTransaction().commit();

			logger.debug("Encontrado: " + config);
			return config;
		} catch (Exception ex) {
			session.getTransaction().rollback();
			logger.error(ex.getMessage());
			throw new JatytaException(
					JatytaException._PERSISTENCE_SELECT_ERROR_MESSAGE);

		}

	}

	public Boolean getAjustJSFElementIdByCrawljaxRecordId(Long id)
			throws JatytaException {
		try {
			session.beginTransaction();

			// delete prop value
			String hql = "select ajustJSFAutoGeneratedId from  JatytaCrawlConfiguration where configurationId in "
					+ " (select r.configurationId from JatytaCrawlRecord r where r.idCrawlRecord =:id)";
			Query query = session.createQuery(hql);
			query.setLong("id", id);
			Boolean result = (Boolean) query.uniqueResult();

			session.getTransaction().commit();
			if (result == null) {
				return false;
			}
			return result;
		} catch (Exception ex) {
			session.getTransaction().rollback();
			logger.error(ex.getMessage());
			throw new JatytaException(
					JatytaException._PERSISTENCE_SELECT_ERROR_MESSAGE);

		}

	}

}
